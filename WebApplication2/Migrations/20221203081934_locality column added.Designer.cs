// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(context))]
    [Migration("20221203081934_locality column added")]
    partial class localitycolumnadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplication2.Models.Camp", b =>
                {
                    b.Property<int>("idCamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCamp"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOrganization")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationIdOrganization")
                        .HasColumnType("int");

                    b.Property<string>("SesionalShift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermsAndPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("campName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("campType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foodInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("haveSportObjects")
                        .HasColumnType("bit");

                    b.Property<int>("housingCount")
                        .HasColumnType("int");

                    b.Property<string>("supportTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("territoryArea")
                        .HasColumnType("float");

                    b.HasKey("idCamp");

                    b.HasIndex("OrganizationIdOrganization");

                    b.ToTable("Camps");
                });

            modelBuilder.Entity("WebApplication2.Models.Child", b =>
                {
                    b.Property<int>("idChild")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idChild"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Snils")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCitizenship")
                        .HasColumnType("int");

                    b.Property<int>("idParent")
                        .HasColumnType("int");

                    b.Property<int>("idPersonalDocument")
                        .HasColumnType("int");

                    b.Property<int>("idRegistrationAddress")
                        .HasColumnType("int");

                    b.Property<string>("telephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idChild");

                    b.HasIndex("idCitizenship");

                    b.HasIndex("idParent");

                    b.HasIndex("idPersonalDocument");

                    b.HasIndex("idRegistrationAddress");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("WebApplication2.Models.Citizenship", b =>
                {
                    b.Property<int>("idCitizenship")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCitizenship"), 1L, 1);

                    b.Property<string>("fullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCitizenship");

                    b.ToTable("Citizenships");
                });

            modelBuilder.Entity("WebApplication2.Models.District", b =>
                {
                    b.Property<int>("idDistrict")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDistrict"), 1L, 1);

                    b.Property<int>("idRegion")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idDistrict");

                    b.HasIndex("idRegion");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("WebApplication2.Models.Locality", b =>
                {
                    b.Property<int>("idLocality")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idLocality"), 1L, 1);

                    b.Property<int>("idDistrict")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idLocality");

                    b.HasIndex("idDistrict");

                    b.ToTable("Localities");
                });

            modelBuilder.Entity("WebApplication2.Models.Organization", b =>
                {
                    b.Property<int>("IdOrganization")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrganization"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrganization");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("WebApplication2.Models.Parent", b =>
                {
                    b.Property<int>("idParent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idParent"), 1L, 1);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentStatus")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Snils")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("confirmCode")
                        .HasColumnType("int");

                    b.Property<bool>("emailIsConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("idCitizenship")
                        .HasColumnType("int");

                    b.Property<int?>("idPersonalDocument")
                        .HasColumnType("int");

                    b.Property<int?>("idRegistrationAddress")
                        .HasColumnType("int");

                    b.Property<string>("telephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idParent");

                    b.HasIndex("idCitizenship");

                    b.HasIndex("idPersonalDocument");

                    b.HasIndex("idRegistrationAddress");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("WebApplication2.Models.PersonalDocument", b =>
                {
                    b.Property<int>("idPersonalDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPersonalDocument"), 1L, 1);

                    b.Property<int>("PlacementDocument")
                        .HasColumnType("int");

                    b.Property<int>("TypePersonalDocument")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("issuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("series")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("validityTime")
                        .HasColumnType("datetime2");

                    b.HasKey("idPersonalDocument");

                    b.ToTable("Pasports");
                });

            modelBuilder.Entity("WebApplication2.Models.Region", b =>
                {
                    b.Property<int>("idRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRegion"), 1L, 1);

                    b.Property<string>("regionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRegion");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("WebApplication2.Models.RegistrationAddress", b =>
                {
                    b.Property<int>("idRegistrationAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRegistrationAddress"), 1L, 1);

                    b.Property<string>("district")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("houseHumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("housing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCitizenship")
                        .HasColumnType("int");

                    b.Property<string>("index")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRegistrationAddress");

                    b.HasIndex("idCitizenship");

                    b.ToTable("RegistrationAddresses");
                });

            modelBuilder.Entity("WebApplication2.Models.Street", b =>
                {
                    b.Property<int>("idStreet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idStreet"), 1L, 1);

                    b.Property<int>("idLocality")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idStreet");

                    b.HasIndex("idLocality");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("WebApplication2.Models.Camp", b =>
                {
                    b.HasOne("WebApplication2.Models.Organization", "Organization")
                        .WithMany("Camps")
                        .HasForeignKey("OrganizationIdOrganization");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("WebApplication2.Models.Child", b =>
                {
                    b.HasOne("WebApplication2.Models.Citizenship", "Citizenship")
                        .WithMany("Childs")
                        .HasForeignKey("idCitizenship")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Parent", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("idParent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.PersonalDocument", "PersonalDocument")
                        .WithMany("Childs")
                        .HasForeignKey("idPersonalDocument")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.RegistrationAddress", "RegistrationAddress")
                        .WithMany("Children")
                        .HasForeignKey("idRegistrationAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizenship");

                    b.Navigation("Parent");

                    b.Navigation("PersonalDocument");

                    b.Navigation("RegistrationAddress");
                });

            modelBuilder.Entity("WebApplication2.Models.District", b =>
                {
                    b.HasOne("WebApplication2.Models.Region", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("idRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WebApplication2.Models.Locality", b =>
                {
                    b.HasOne("WebApplication2.Models.District", "District")
                        .WithMany("Localities")
                        .HasForeignKey("idDistrict")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("WebApplication2.Models.Parent", b =>
                {
                    b.HasOne("WebApplication2.Models.Citizenship", "Citizenship")
                        .WithMany("Parents")
                        .HasForeignKey("idCitizenship");

                    b.HasOne("WebApplication2.Models.PersonalDocument", "PersonalDocument")
                        .WithMany("Parents")
                        .HasForeignKey("idPersonalDocument");

                    b.HasOne("WebApplication2.Models.RegistrationAddress", "RegistrationAddress")
                        .WithMany("Parents")
                        .HasForeignKey("idRegistrationAddress");

                    b.Navigation("Citizenship");

                    b.Navigation("PersonalDocument");

                    b.Navigation("RegistrationAddress");
                });

            modelBuilder.Entity("WebApplication2.Models.RegistrationAddress", b =>
                {
                    b.HasOne("WebApplication2.Models.Citizenship", "Citizenship")
                        .WithMany()
                        .HasForeignKey("idCitizenship")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizenship");
                });

            modelBuilder.Entity("WebApplication2.Models.Street", b =>
                {
                    b.HasOne("WebApplication2.Models.Locality", "Locality")
                        .WithMany("Streets")
                        .HasForeignKey("idLocality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locality");
                });

            modelBuilder.Entity("WebApplication2.Models.Citizenship", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("WebApplication2.Models.District", b =>
                {
                    b.Navigation("Localities");
                });

            modelBuilder.Entity("WebApplication2.Models.Locality", b =>
                {
                    b.Navigation("Streets");
                });

            modelBuilder.Entity("WebApplication2.Models.Organization", b =>
                {
                    b.Navigation("Camps");
                });

            modelBuilder.Entity("WebApplication2.Models.Parent", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("WebApplication2.Models.PersonalDocument", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("WebApplication2.Models.Region", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("WebApplication2.Models.RegistrationAddress", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Parents");
                });
#pragma warning restore 612, 618
        }
    }
}
